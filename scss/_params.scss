/* BASE FONT SIZE */

$base-font-num: 100; //Base font-size
$base-font: $base-font-num * 1%; //Base font-size add percentage !Do not modify
$rem-base: 16; // Base font size for setting REM units. Default: 16

//REM value in pixels !Do not modify
$rem-value: $rem-base + px;

// Convert px size to rem 
@function size($pixel) {
  @return ($pixel / $rem-base) + rem;
}

// Return REM value from px value, without units
@function sizenum($pixel) {
  @return ($pixel / $rem-base);
}

/*BREAKPOINTS*/

$xs: 575px; // Phone
$sm: 767px; //Tablet
$md: 991px; // Desktop
$lg: 1199px; // Larger displays

$height-point: 600px; // Point where the horizontal menu will collapse.

/*TRANSITIONS*/

// Collapsed navigation transition
@mixin trans-short() {
  transition: all 0.3s ease;
}

@mixin trans-medium() {
  transition: all 0.5s;
}

@mixin nav-long() {
  transition: all 0.8s ease;
}

@mixin nav-longest() {
  transition: all 1s;
}

// Mixin Tools: http://www.developerdrive.com/2018/05/10-best-sass-mixins-for-web-developers/

// ADD VENDOR PREFIXES TO ANY CSS PROPERTY

@mixin css3-prefix($prop, $value) {
  -webkit-#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
  #{$prop}: #{$value};
}

// VERTICAL CENTERING

@mixin vertical-center {
  position: relative;
  top: 50%;
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

// FONT-FACE RULE

@mixin font-face($name, $file) {
  @font-face {
    font-family: "#{$name}";
    src: url("../fonts/#{$file}.eot");
    src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
    url("../fonts/#{$file}.woff") format("woff"),
    url("../fonts/#{$file}.ttf") format("truetype"),
    url("../fonts/#{$file}.svg?#webfont") format("svg");
  }
}

// KEYFRAME ANIMATIONS

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

// RETINA-READY IMAGES

@mixin retina-image($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

// ABSOLUTE POSITIONING

@mixin abs-position ($top, $right, $bottom, $left) {
  position: absolute; 
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// ARROW WITH FOUR OPTIONAL DIRECTIONS

@mixin arrow($direction: down, $size: 5px, $color: #555) {
  width: 0;
  height: 0;
  @if ($direction == left) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent; 
    border-right: $size solid $color;
  }
  @else if ($direction == right) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent; 
    border-left: $size solid $color;
  }
  @else if ($direction == down) {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  }
  @else {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
}

// MEDIA QUERIES FOR MOBILE-FIRST DESIGN

@mixin breakpoint($point) {
  @if $point == large {
    @media only screen and (min-width: 1366px) {
      @content;
    }
  } 
  @else if $point == desktop {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  } 
  @else if $point == tablet {
    @media only screen and (min-width: 600px) {
      @content;
    }
  }
}

// FIXED ASPECT RATIO

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .inner-box {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// TEXT ELLIPSIS

@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

